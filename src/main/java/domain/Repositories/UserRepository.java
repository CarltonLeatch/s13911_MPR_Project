package domain.Repositories;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import mappers.IMapResultSetToEntity;
import domain.User;
import domain.uow.IUnitOfWork;

public class UserRepository extends RepositoryBase<User> implements IUserRepository{
	
	
	public UserRepository(Connection connection,
			IMapResultSetToEntity<User> mapper,
			IUnitOfWork uow) {
		super(connection,mapper, uow);
	}
	
	public void setInsertQuery(User u) throws SQLException {
		insert.setString(1, u.getLogin());
		insert.setString(2, u.getPassword());
		
	}
	
	public void setUpdateQuery(User u) throws SQLException {
		update.setString(1, u.getLogin());
		update.setString(2, u.getPassword());
		update.setInt(3, u.getId());
	}
	
	
	
	protected String tableName(){
		return "user";
	}
	
	protected String createTableSql(){
		return "CREATE TABLE user("
				+"id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+"Login VARCHAR(20)," + "Password VARCHAR(20)"
				+");";
		
	}
	protected String insertSql(){
		return "INSERT INTO user(Login, Password) VALUES (?,?)";
	}
	
	protected String updateSql(){
		return "UPDATE user SET Login = ?, Password = ? WHERE id = ?";
	}

	public List<User> withLogin(String login){
		
		ArrayList<User> users = new ArrayList<User>();
		
		for(User u : getAll())
		{
			if(u.getLogin().equals(login))
		{
				users.add(u);
				return users;
		}
			
		
		}		
		return null;
	}

	public List<User> withLoginAndPassword(String login, String password) {
		
		ArrayList<User> users = new ArrayList<User>();
		
		for(User u : getAll())
		{
			if(u.getLogin().equals(login) && u.getPassword().equals(password))
		{
				users.add(u);
				return users;
		}
	}
		return null;
}

	public void setupPermission(User user) {
		// TODO Auto-generated method stub
		
	}
	
}
