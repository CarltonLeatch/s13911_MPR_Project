package domain.Repositories;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import mappers.IMapResultSetToEntity;
import domain.Role;
import domain.User;
import domain.uow.IUnitOfWork;

public class RoleRepository extends RepositoryBase<Role> implements IRoleRepository{

	public RoleRepository(Connection connection,
			IMapResultSetToEntity<Role> mapper,
			IUnitOfWork uow) {
		super(connection,mapper, uow);
	}
			
	public List<Role> withName(String name) {
		ArrayList<Role> roles = new ArrayList<Role>();
		
		for(Role r : getAll())
		{
			if(r.getName().equals(name))
		{
				roles.add(r);
				return roles;
		}
			
		
		}		
		return null;
	}
	

	@Override
	protected void setUpdateQuery(Role r) throws SQLException {
		// TODO Auto-generated method stub
	
		update.setInt(1, r.getUser_id());
		update.setString(2, r.getName());
		
	}

	@Override
	protected void setInsertQuery(Role r) throws SQLException {
	
		insert.setInt(1, r.getUser_id());
		insert.setString(2, r.getName());
		
	}

	@Override
	protected String tableName(){
		return "role";
	}
	
	protected String createTableSql(){
		return "CREATE TABLE role("
				+"id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+"user_id VARCHAR(255) ," + "name VARCHAR(255)"
				+");";
		
	}
	protected String insertSql(){
		return "INSERT INTO role(user_id, name) VALUES (?,?)";
	}
	
	protected String updateSql(){
		return "UPDATE role SET user_id = ?, name = ? WHERE id = ?";
	}

	public List<User> withLogin(String login) {
		ArrayList users = new ArrayList<User>();
		User user = new User();
		for(Role r : getAll())
		{
			if(user.getLogin().equals(login))
			{
				users.add(user);
				return users;
			}
			
			
		}
		return null;
}
	
	
	
	
}

